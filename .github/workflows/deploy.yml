name: first github_action deploy!

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checking repository...
        uses: actions/checkout@v3

      - name: login docker...
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: build & push docker image...
        run: |
          chmod +x ./gradlew
          docker build -t ${{secrets.DOCKER_USERNAME}}/dummy_talk .
          docker push ${{secrets.DOCKER_USERNAME}}/dummy_talk

      - name: deploy to EC2...
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script: |
            if [ -d "my-spring-boot-project" ]; then
              echo "Git repository already exists. Pulling !!"
              cd my-spring-boot-project
              sudo git pull origin main
            else
              echo "Git repository not found. Cloning !"
              git clone https://github.com/my-user/my-spring-boot-project.git
              cd my-spring-boot-project
            fi
            
            sudo docker-compose down || true
            
            echo "DB_HOST=${{secrets.DB_HOST}}" > .env
            echo "DB_NAME=${{secrets.DB_NAME}}" >> .env
            echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
            echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
            echo "OPENI_KEY=${{secrets.OPENAI_KEY}}" >> .env
            
            sudo docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
            
            sudo docker-compose pull
            sudo docker-compose up -d
